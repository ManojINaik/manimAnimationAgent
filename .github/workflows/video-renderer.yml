name: Video Renderer
on:
  # Trigger manually or via webhook
  workflow_dispatch:
    inputs:
      video_id:
        description: 'Video ID to render'
        required: true
        type: string
  # Also run on a schedule to check for queued videos
  # schedule:
  #   - cron: '*/5 * * * *'  # Every 5 minutes
  
  # Trigger via repository dispatch (webhook)
  repository_dispatch:
    types: [render_video]

jobs:
  render-video:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    # Use custom Docker container with pre-installed dependencies
    container:
      image: ghcr.io/${{ toLower(github.repository) }}/manim-animation-agent:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user runner
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    # No need for Python setup - already in container
    # No need for system dependencies - already in container
    # No need for most caching - dependencies pre-installed in container
    
    # Only cache the virtual environment for any additional dependencies
    - name: Cache additional dependencies
      uses: actions/cache@v3
      id: cache-additional-deps
      with:
        path: ~/.cache/pip
        key: additional-deps-${{ runner.os }}-${{ hashFiles('requirements-github-actions.txt') }}
        restore-keys: |
          additional-deps-${{ runner.os }}-
          
    # Install any additional or updated dependencies
    - name: Update dependencies if needed
      run: |
        pip install --upgrade pip
        pip install -r requirements-github-actions.txt --use-deprecated=legacy-resolver
        
    - name: Set up environment variables
      env:
        APPWRITE_ENDPOINT: ${{ secrets.APPWRITE_ENDPOINT }}
        APPWRITE_PROJECT_ID: ${{ secrets.APPWRITE_PROJECT_ID }}
        APPWRITE_API_KEY: ${{ secrets.APPWRITE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        MEM0_API_KEY: ${{ secrets.MEM0_API_KEY }}
        TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
        MANIMCE_USE_PROGRESS_BARS: "true"
      run: |
        echo "Environment variables set"
        
    - name: Check for queued videos
      id: check_queue
      env:
        APPWRITE_ENDPOINT: ${{ secrets.APPWRITE_ENDPOINT }}
        APPWRITE_PROJECT_ID: ${{ secrets.APPWRITE_PROJECT_ID }}
        APPWRITE_API_KEY: ${{ secrets.APPWRITE_API_KEY }}
      run: |
        python scripts/check_video_queue.py
        
    - name: Render videos
      if: steps.check_queue.outputs.videos_found == 'true'
      env:
        APPWRITE_ENDPOINT: ${{ secrets.APPWRITE_ENDPOINT }}
        APPWRITE_PROJECT_ID: ${{ secrets.APPWRITE_PROJECT_ID }}
        APPWRITE_API_KEY: ${{ secrets.APPWRITE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        MEM0_API_KEY: ${{ secrets.MEM0_API_KEY }}
        TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
        MANIMCE_USE_PROGRESS_BARS: "true"
        VIDEO_ID: ${{ github.event.inputs.video_id || github.event.client_payload.video_id }}
      run: |
        python scripts/github_video_renderer.py
        
    - name: Upload artifacts (for debugging)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: video-render-logs
        path: |
          output/
          *.log
        retention-days: 7 
