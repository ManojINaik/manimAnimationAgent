<CODE>
```python
from manim import *
from manim import config as global_config
from manim_voiceover import VoiceoverScene
from src.utils.elevenlabs_voiceover import get_speech_service # You MUST import like this as this is our custom voiceover service.

# plugins imports, don't change the import statements
# Note: The following plugin imports are commented out due to Python 3.13 compatibility issues
# Uncomment and install individually if needed and compatible with your Python version
# from manim_circuit import *
# from manim_physics import *
# from manim_chemistry import *
# from manim_dsa import *
# from manim_ml import *

# Helper Functions/Classes
class Scene3_Helper:
    # Helper class containing utility functions for scene 3.
    def __init__(self, scene):
        self.scene = scene

    def create_thylakoid(self):
        # Creates a single thylakoid.
        return Polygon([[-0.2, -0.2, 0], [0.2, -0.2, 0], [0.2, 0.2, 0], [-0.2, 0.2, 0]], color=BLUE)

class Scene3(VoiceoverScene, MovingCameraScene):
    # Scene class for Chloroplast Structure
    def construct(self):
        # Initialize speech service
        self.set_speech_service(get_speech_service())

        # Instantiate helper class
        helper = Scene3_Helper(self)

        # --- Sub-scene 1: Zooming into the Chloroplast ---
        with self.voiceover(text="Building on what we saw in the previous part, let's zoom in and take a closer look at one of these fascinating organelles within the plant cell.") as tracker:
            # Assume plant_cell and chloroplasts are defined from a previous scene.
            # For demonstration purposes, let's create placeholder circles.
            plant_cell = Circle(radius=3, color=GREEN)
            chloroplasts = [
                Circle(radius=0.3, color=YELLOW).move_to([1, 0.5, 0]),
                Circle(radius=0.3, color=YELLOW).move_to([-1, -0.5, 0]),
            ]
            self.add(plant_cell, *chloroplasts) # Add the objects initially so we can access their positions.

            self.wait(tracker.duration)

        with self.voiceover(text="Notice these green structures scattered throughout the cell? These are *chloroplasts*, the powerhouses of photosynthesis.") as tracker:
            chloroplast_position = chloroplasts[0].get_center()
            highlight_circle = Circle(radius=0.3, color=YELLOW).move_to(chloroplast_position)
            self.play(Create(highlight_circle), run_time=tracker.duration)
            self.wait(0.5)

        with self.voiceover(text="In Scene 3, we'll explore the inner workings of the chloroplast and discover how its unique structure enables it to perform this vital process.") as tracker:
            self.play(camera.frame.animate.scale(0.2).move_to(chloroplast_position), run_time=tracker.duration)
            self.play(FadeOut(highlight_circle))
            self.wait(1)

        with self.voiceover(text="So, what exactly does a chloroplast look like on the inside?") as tracker:
            self.wait(tracker.duration)

        # --- Sub-scene 2: Chloroplast Diagram ---
        with self.voiceover(text="First, we have the *outer membrane*, which acts as the chloroplast's outer boundary.") as tracker:
            outer_membrane = Circle(radius=2, color=GREEN).move_to(ORIGIN)
            self.play(Create(outer_membrane), run_time=tracker.duration)
            # Check: outer_membrane within safe area

        with self.voiceover(text="Inside that, is the *inner membrane*. Notice the space between the two membranes. This is important for the transport of materials.") as tracker:
            inner_membrane = Circle(radius=1.8, color=GREEN).move_to(ORIGIN)
            self.play(Create(inner_membrane), run_time=tracker.duration)
            # Check: inner_membrane within safe area and smaller than outer_membrane

        with self.voiceover(text="Within the inner membrane, we find stacks of disc-shaped structures called *thylakoids*. A stack of thylakoids is called a *granum*.") as tracker:
            thylakoid1 = helper.create_thylakoid()
            granum = VGroup(*[thylakoid1.copy().shift([0, i*0.2, 0]) for i in range(5)]).move_to([0.5, 0, 0])
            self.play(Create(granum), run_time=tracker.duration)
            # Check: granum within inner_membrane and minimum spacing maintained

        with self.voiceover(text="The fluid-filled space surrounding the grana is called the *stroma*.") as tracker:
            stroma_label = Tex("Stroma", color=WHITE, font_size=24).next_to(outer_membrane, direction=RIGHT, buff=0.5)
            self.play(FadeIn(stroma_label), run_time=tracker.duration)
            # Check: stroma_label within safe area and minimum spacing maintained

        with self.voiceover(text="Let's label the *outer membrane*.") as tracker:
            outer_membrane_label = Tex("Outer Membrane", color=WHITE, font_size=24).next_to(outer_membrane, direction=UP, buff=0.5)
            outer_membrane_arrow = Arrow(outer_membrane_label.get_bottom(), outer_membrane.get_top(), buff=0.1)
            self.play(FadeIn(outer_membrane_label), Create(outer_membrane_arrow), run_time=tracker.duration)
            # Check: outer_membrane_label and arrow within safe area and minimum spacing maintained

        with self.voiceover(text="And the *inner membrane*.") as tracker:
            inner_membrane_label = Tex("Inner Membrane", color=WHITE, font_size=24).next_to(inner_membrane, direction=DOWN, buff=0.5)
            inner_membrane_arrow = Arrow(inner_membrane_label.get_top(), inner_membrane.get_bottom(), buff=0.1)
            self.play(FadeIn(inner_membrane_label), Create(inner_membrane_arrow), run_time=tracker.duration)
            # Check: inner_membrane_label and arrow within safe area and minimum spacing maintained

        with self.voiceover(text="And finally, the *granum*, the stack of thylakoids.") as tracker:
            granum_label = Tex("Granum", color=WHITE, font_size=24).next_to(granum, direction=RIGHT, buff=0.5)
            granum_arrow = Arrow(granum_label.get_left(), granum.get_right(), buff=0.1)
            self.play(FadeIn(granum_label), Create(granum_arrow), run_time=tracker.duration)
            # Check: granum_label and arrow within safe area and minimum spacing maintained

        with self.voiceover(text="It's within these structures, especially the thylakoids, that the magic of *photosynthesis* truly happens!") as tracker:
            photosynthesis_text = Tex("Photosynthesis occurs here!", color=YELLOW, font_size=24).to_edge(DOWN, buff=0.7)
            self.play(FadeIn(photosynthesis_text), run_time=tracker.duration)
            # Check: photosynthesis_text within safe area

        with self.voiceover(text="So, the chloroplast, with its outer and inner membranes, stroma, and grana, is a highly organized factory specifically designed for photosynthesis.") as tracker:
            self.wait(tracker.duration)

        with self.voiceover(text="Now that we've seen the structure, let's move on to the next scene and delve deeper into the process of photosynthesis itself.") as tracker:
            self.play(FadeOut(outer_membrane, inner_membrane, granum, stroma_label, outer_membrane_label, inner_membrane_label, granum_label, outer_membrane_arrow, inner_membrane_arrow, granum_arrow, photosynthesis_text), run_time=tracker.duration)
            self.wait(1) # Scene end transition buffer
```
</CODE>